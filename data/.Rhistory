Results <- read.csv("~/Documents/PSY 441/Capstone Portfolio/data/Results.csv")
View(Results)
dat<-read.csv("Results.csv")
str(dat)
dat<-dat[!is.na(dat$Response),]
dat$Response<-factor(dat$Response)
chisq.test(dat$Condition,dat$Response)
library(dplyr)
library(ggplot2)
temp<-dat%>%group_by(Condition,Response)%>%
summarize(frequency=length(Response))
library("gplots")
col1=col2hex("deeppink")
col2=col2hex("deepskyblue2")
f<-ggplot(temp, aes(x=Response, y=frequency, fill=Condition))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c(col1,col2),name="Condition",breaks=c("Conformity","Control"),labels=c("Conformity", "Control"))+
theme(legend.key=element_rect(color="black"))+
ggtitle("Frequency of Responses by Condition")+
labs(x="Selected Responses",y="Frequency of Responses")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.8,.80))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
View(temp)
View(Results)
View(dat)
```{r}
#440 Capstone Project
<!-- This is an Rmd comment. -->
<!--
You can make comments several lines long by inserting
the text in between the the start and the end of the
comment.
Comments are where I'll tell you what to do. You should
use the space directly below the comments to do what
the comment asks. You should also describe what you're
doing to make it obvious to the reader so they can
easily follow your logic in a fully reproducible way.
For any statistical tests you run, you should explain
the results in plain English and present the statistics
as you would in an APA style manuscript. For any symbols
you don't know how to use/can't use, feel free to use the name
instead (e.g. alpha)
-->
<!-- Load the Results.csv data file. -->
First we need to load the data.
```{r}
dat<-read.csv("Results.csv")
```
<!--
Check the structure. Fix any variables that aren't right.
-->
Let's take a look at the data.
```{r}
str(dat)
```
Response should be a Factor not an Integer, so let's fix that real quick.
```{r}
dat$Response<-factor(dat$Response)
```
And check our work.
```{r}
str(dat)
```
Okay that worked, yes! There are some responses that have an NA. So since we want to exclude that data, we will get rid of these data to avoid confusion.
```{r}
dat<-dat[!is.na(dat$Response),]
```
Great, now we will see if Response is independent of Condition. To do this we need to run a Chi-Square of independence to test.
```{r}
chisq.test(dat$Condition,dat$Response)
```
Pearson's Chi-squared test
data:  dat$Condition and dat$Response
X-squared = 9.6903, df = 3, p-value = 0.02139
---Response choice is significantly dependent of Condition group, Chi-Square(3)=9.69, p=.02, yay!
Now let's create a graph
```{r}
library(dplyr)
library(ggplot2)
temp<-dat%>%group_by(Condition,Response)%>%
summarize(frequency=length(Response))
library("gplots")
col1=col2hex("deeppink")
col2=col2hex("deepskyblue2")
f<-ggplot(temp, aes(x=Response, y=frequency, fill=Condition))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c(col1,col2),name="Condition",breaks=c("Control","Conformity"),labels=c("Control", "Conformity"))+
theme(legend.key=element_rect(color="black"))+
ggtitle("Frequency of Responses by Condition")+
labs(x="Selected Response",y="Frequency of Responses")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.8,.80))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
```
The Y axis displays how many times (frequency) the particpants answered the mathematical equation with the selected responses. There were four possible responses particpants could choose from; 7, 11, 12, and 14.The Control condition appears in blue and the Conformity condition appears in pink. The conformity condition was manipulated to include peer influence next to each response the particpants could choose from.
dat<-read.csv("Results.csv")
str(dat)
dat<-read.csv("Results.csv")
str(dat)
dat$Response<-factor(dat$Response)
str(dat)
dat<-dat[!is.na(dat$Response),]
chisq.test(dat$Condition,dat$Response)
library(dplyr)
library(ggplot2)
temp<-dat%>%group_by(Condition,Response)%>%
summarize(frequency=length(Response))
library("gplots")
col1=col2hex("deeppink")
col2=col2hex("deepskyblue2")
f<-ggplot(temp, aes(x=Response, y=frequency, fill=Condition))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c(col1,col2),name="Condition",breaks=c("Control","Conformity"),labels=c("Control", "Conformity"))+
theme(legend.key=element_rect(color="black"))+
ggtitle("Frequency of Responses by Condition")+
labs(x="Selected Response",y="Frequency of Responses")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.8,.80))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
dat<-read.csv("Results.csv")
str(dat)
dat$Response<-factor(dat$Response)
str(dat)
dat<-read.csv("Results.csv")
str(dat)
dat$Response<-factor(dat$Response)
str(dat)
dat<-dat[!is.na(dat$Response),]
chisq.test(dat$Condition,dat$Response)
library(dplyr)
library(ggplot2)
temp<-dat%>%group_by(Condition,Response)%>%
summarize(frequency=length(Response))
library("gplots")
col1=col2hex("deeppink")
col2=col2hex("deepskyblue2")
f<-ggplot(temp, aes(x=Response, y=frequency, fill=Condition))+
geom_bar(stat="identity",position=position_dodge())+
scale_fill_manual(values=c(col1,col2),name="Condition",breaks=c("Control","Feedback"),labels=c("Control", "Feedback"))+
theme(legend.key=element_rect(color="black"))+
ggtitle("Frequency of Responses by Condition")+
labs(x="Selected Response",y="Frequency of Responses")+
theme(plot.title=element_text(size=15,face="bold",vjust=.5))+
theme(axis.title.x=element_text(size=12,face="bold",vjust=-.25))+
theme(axis.title.y=element_text(size=12,face="bold",vjust=1))+
theme(axis.text.x=element_text(size=10,face="bold",color="black"))+
theme(axis.text.y=element_text(size=10,face="bold",color="black"))+
theme(panel.border=element_blank(),axis.line=element_line())+
theme(panel.grid.major.x=element_blank())+
theme(panel.grid.major.y=element_line(color="darkgrey"))+
theme(panel.grid.minor.y=element_blank())+
theme(legend.position=c(.8,.80))+
theme(legend.background=element_blank())+
theme(legend.background=element_rect(color="black"))+
theme(legend.title=element_blank())+
theme(legend.title=element_text(size=12))+
theme(legend.title.align=.5)+
theme(legend.text=element_text(size=10,face="bold"))
f
